from aiogram import Dispatcher, executor, Bot, types
import requests
import datetime
import config

bot = Bot(config.BOT_TOKEN)
api = 'd031223335de6838db57720ffedbeb2b'
dp = Dispatcher(bot)
joinedFile = open('joined_users.txt')
JoinedUsers = set()

# –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ ID –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ñ–∞–π–ª–µ —Å ID
for line in joinedFile:
    JoinedUsers.add(line.strip())
joinedFile.close()

@dp.message_handler(commands=['start'])
async def start(msg: types.Message):
    await msg.answer('–ü—Ä–∏–≤–µ—Ç! \n–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏ –ø—Ä–∞–∫—Ç–∏–∫–∏, —á—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –µ–≥–æ –∫–æ–º–∞–Ω–¥–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É–π /help')
    if not str(msg.chat.id) in JoinedUsers:
        joinedFile = open('joined_users.txt', 'a')
        joinedFile.write(str(msg.chat.id) + '\n')
        JoinedUsers.add(msg.chat.id)
    await msg.answer('–í—ã –Ω–∞—à –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—å.')

@dp.message_handler(commands=['help'])
async def help(msg: types.Message):
    await msg.answer('/start - –ù–∞—á–∞–ª–æ –±–æ—Ç–∞ \n/help - –≠—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ \n/weather - –ø–æ–≥–æ–¥–∞ –≤ —Ç–≤–æ—ë–º –≥–æ—Ä–æ–¥–µ')

@dp.message_handler(commands=['info'])
async def info(msg: types.Message):
    await msg.answer('–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –±–∞–∑—É, –∫–æ—Ç–æ—Ä–∞—è —Å–ø–æ—Å–æ–±–Ω–∞ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–∞–∫–µ—Ç —Ñ—É–Ω–∫—Ü–∏–π. '
                     '–í –¥–∞–ª—å–Ω–µ–π—à–µ–º —ç—Ç–æ—Ç –±–æ—Ç –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ')

@dp.message_handler(commands=['scrt'])
async def mes(msg: types.Message):
    for user in JoinedUsers:
        await bot.send_message(user, msg.text[msg.text.find(' '):])

@dp.message_handler(commands=['weather'])
async def weather(msg: types.Message):
    await msg.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–µ–∂–∏–º —Å–≤–æ–¥–∫–∏ –æ –ø–æ–≥–æ–¥–µ. –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –æ –ø–æ–≥–æ–¥–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é‚òÄüå¶‚õÖ')

@dp.message_handler(content_types=['text'])
async def get_weather(msg: types.Message):
    try:
        city = msg.text.strip().lower()
        r = requests.get(f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={api}&units=metric')
        data = r.json()
        cityjson = data["name"]
        temp = data["main"]["temp"]
        wind = data["wind"]["speed"]
        humidity = data["main"]["humidity"]
        sunrise = datetime.datetime.fromtimestamp(data["sys"]["sunrise"]).strftime('%H:%M')
        sunset = datetime.datetime.fromtimestamp(data["sys"]["sunset"]).strftime('%H:%M')
        code_to_smile = {                                                               
            "Clear": "–Ø—Å–Ω–æ \U00002600",
            "Clouds": "–û–±–ª–∞—á–Ω–æ \U00002601",
            "Rain": "–î–æ–∂–¥—å \U00002614",
            "Drizzle": "–î–æ–∂–¥—å \U00002614",
            "Thunderstorm": "–ì—Ä–æ–∑–∞ \U000026A1",
            "Snow": "–°–Ω–µ–≥ \U0001F328",
            "Mist": "–¢—É–º–∞–Ω \U0001F32B",
            "light rain": "–ü–∞—Å–º—É—Ä–Ω–æ üåß"
        }
        weather_desc = data["weather"][0]["description"]
        if weather_desc in code_to_smile:
            wd = code_to_smile[weather_desc]
        else:
            wd = '–í—ã–≥–ª—è–Ω–∏—Ç–µ –≤ –æ–∫–Ω–æ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Ç–∞–º –∑–∞ –ø–æ–≥–æ–¥–∞üòî'
        await msg.reply(f"{datetime.datetime.now().strftime('%d-%m-%Y %H:%M')} \n"
        f'–ì–æ—Ä–æ–¥: {city} \n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {temp}‚ÑÉ {wd}\n'
        f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}% üíß\n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind} –º/—Å üí®\n'
        f'–í—Ä–µ–º—è –≤–æ—Å—Ö–æ–¥–∞: {sunrise} üåÖ\n–í—Ä–µ–º—è –∑–∞–∫–∞—Ç–∞: {sunset} üéë'
        )
    except:
        await msg.answer('–í—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.')


'''–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–¥–µ–ª–∞—Ç—å —É—Å–ª–æ–≤–∏–µ, —á—Ç–æ–±—ã —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –º–µ–Ω—è–ª–∞ —Å–º–∞–π–ª–∏–∫ –Ω–∞ –∫–æ–º—Ñ–æ—Ä—Ç, –∂–∞—Ä–∫–æ –∏ —Ö–æ–ª–æ–¥–Ω–æ'''

executor.start_polling(dp)